# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: windows-latest

steps:
# CÃ i .NET SDK
- task: UseDotNet@2
  displayName: 'Install .NET SDK'
  inputs:
    packageType: 'sdk'
    version: '7.0.x'

# Restore solution
- task: DotNetCoreCLI@2
  displayName: 'Restore'
  inputs:
    command: 'restore'
    projects: 'DistributedSystem.sln'

# Build solution
- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    command: 'build'
    projects: 'DistributedSystem.sln'
    arguments: '--configuration $(buildConfiguration)'

# Publish Web API project
- task: DotNetCoreCLI@2
  displayName: 'Publish Web API'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'src/DistributedSystem.API/DistributedSystem.API.csproj'
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true

# Upload artifact Ä‘á»ƒ deploy
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'

# Deploy lÃªn Azure App Service
- task: AzureWebApp@1
  displayName: 'Deploy to Azure Web App'
  inputs:
    azureSubscription: 'AzureConnection'  # ðŸ‘ˆ TÃªn service connection báº¡n Ä‘Ã£ táº¡o
    appType: 'webApp'
    appName: 'your-app-service-name'      # ðŸ‘ˆ TÃªn Azure App Service
    package: '$(Build.ArtifactStagingDirectory)/**/*.zip'